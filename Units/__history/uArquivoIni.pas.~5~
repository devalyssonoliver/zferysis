unit uArquivoIni;

interface

uses IniFiles, System.SysUtils, Vcl.Forms;

procedure EscreverArquivoIni(const Servidor, Base, Porta: String);
procedure LerArquivoIni(out Servidor, Base, Porta: String);

implementation

procedure EscreverArquivoIni(const Servidor, Base, Porta: String);
var
  arquivoConfig: TIniFile;
  caminhoArquivo: String;
begin
  caminhoArquivo := IncludeTrailingPathDelimiter(ExtractFilePath(Application.ExeName)) + 'FerySis.ini';

  arquivoConfig := TIniFile.Create(caminhoArquivo);
  try
    arquivoConfig.WriteString('DATABASE_CONFIG', 'SERVIDOR', Servidor);
    arquivoConfig.WriteString('DATABASE_CONFIG', 'BASE', Base);
    arquivoConfig.WriteString('DATABASE_CONFIG', 'PORTA', Porta);
  finally
    arquivoConfig.Free;
  end;
end;

procedure LerArquivoIni(out Servidor, Base, Porta: String);
var
  arquivoConfig: TIniFile;
  caminhoArquivo: String;
begin
  caminhoArquivo := IncludeTrailingPathDelimiter(ExtractFilePath(Application.ExeName)) + 'FerySis.ini';

  if not FileExists(caminhoArquivo) then
  begin
    EscreverArquivoIni('localhost', 'database', '5432');
  end;

  arquivoConfig := TIniFile.Create(caminhoArquivo);
  try
    Servidor := arquivoConfig.ReadString('DATABASE_CONFIG', 'SERVIDOR', 'localhost');
    Base := arquivoConfig.ReadString('DATABASE_CONFIG', 'BASE', 'database');
    Porta := arquivoConfig.ReadString('DATABASE_CONFIG', 'PORTA', '5432');
  finally
    arquivoConfig.Free;
  end;
end;

end.

