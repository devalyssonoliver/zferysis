unit uFuncoes;

interface

uses
  Vcl.Forms, Vcl.Controls, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Dialogs,
  Vcl.Graphics,
  Vcl.StyledTaskDialog, Vcl.StyledAnimatedTaskDialog,
  Vcl.ComCtrls, System.SysUtils, Vcl.StyledButton;

procedure DesabilitarCamposTLabelEdit(const Campos: array of TLabeledEdit);
procedure DesabilitarCamposEdit(const Campos: array of TEdit);
procedure HabilitarCamposEdits(const Campos: array of TEdit);
procedure DesabilitarButtons(const Buttons: array of TStyledButton);
procedure HabilitarButtons(const Buttons: array of TStyledButton);
function ConfirmarFechamento: Boolean;
procedure MsgBox(Titulo, Text: String; Buttons: Boolean; Tipo : Integer);

implementation

procedure DesabilitarCamposTLabelEdit(const Campos: array of TLabeledEdit);
var
  i: Integer;
begin
  for i := 0 to High(Campos) do
  begin
    Campos[i].Enabled := False;
  end;
end;

function ConfirmarFechamento: Boolean;
var
  TaskDialog: TStyledTaskDialog;
begin
  Result := False;

  TaskDialog := TStyledTaskDialog.Create(nil);
  try

    TaskDialog.Caption := 'FerySIS';
    TaskDialog.Title := 'Confirmar Fechamento';
    TaskDialog.Text := 'Você tem certeza que deseja fechar a aplicação?';
    TaskDialog.UseAnimations := True;
    TaskDialog.CommonButtons := [tcbYes, tcbNo];
    TaskDialog.DefaultButton := tcbNo;

    if TaskDialog.Execute then
      Result := TaskDialog.ModalResult = mrYes;

  finally
    TaskDialog.Free;
  end;
end;

procedure DesabilitarCamposEdit(const Campos: array of TEdit);
var
  i: Integer;
begin
  for i := 0 to High(Campos) do
  begin
    Campos[i].Enabled := False;
  end;
end;
procedure DesabilitarButtons(const Buttons: array of TStyledButton);
var
  i: Integer;
begin
  for i := 0 to High(Buttons) do
  begin
    Buttons[i].Enabled := False;
  end;


end;
procedure HabilitarButtons(const Buttons: array of TStyledButton);
var
  i: Integer;
begin
  for i := 0 to High(Buttons) do
  begin
    Buttons[i].Enabled := True;
  end;


end;

procedure MsgBox(Titulo, Text: String; Buttons: Boolean; Tipo : Integer);
var
  TaskDialog: TStyledTaskDialog;
begin
  TaskDialog := TStyledTaskDialog.Create(nil);
  TaskDialog.Title := Titulo;
  TaskDialog.Text := Text;
 case Tipo of
    1:
      TaskDialog.FooterIcon := tdiWarning;
    2 :
      TaskDialog.FooterIcon := tdiError;
    3:
      TaskDialog.FooterIcon := tdiInformation;
    4:
      TaskDialog.FooterIcon := tdiShield;
    5:
      TaskDialog.FooterIcon := tdiQuestion;
  else
    TaskDialog.FooterIcon := tdiNone;
  end;
  if Buttons then
  begin
    TaskDialog.CommonButtons := [tcbYes, tcbNo];
  end
  else
  begin
    TaskDialog.CommonButtons := [tcbOk];
  end;
  TaskDialog.Execute;

end;
procedure HabilitarCamposEdits(const Campos: array of TEdit);
var
  i : integer;
begin
    for i := 0 to High(Campos) do
    begin
      Campos[i].Enabled := True;
    end;

end;
end.
