unit iColaboradorRepositorio;

interface

uses
  iColaborador, Data.DB, FireDAC.Comp.Client, dmGerenciadorConexao,
  System.SysUtils, uFuncoes, Colaborador;

type
  TColaboradorRepository = class(TInterfacedObject, IColaboradorRepository)
    function Inserir(const Codigo, CodSetor: Integer; Nome, Matricula: String;
      DataContrato, DataCadastro, PeriodoAquisitivo, PeriodoConsessivo: TDate;
      Ativo: Boolean): Boolean;
    function Deletar(const Codigo: Integer): Boolean;
    function Editar(const Codigo, CodSetor: Integer; Nome, Matricula: String;
      DataContrato, PeriodoAquisitivo, PeriodoConsessivo: TDate;
      Ativo: Boolean): Boolean;
    procedure BuscarUsuario(const CriterioIndex: Integer; const Valor: Variant;
      ADataSet: TDataSet);
    procedure ListarTodos(ADataSet: TDataSet);
    function CarregarColaborador(const Codigo: Integer): TColaborador;
  end;

implementation

{ TColaboradorRepository }

procedure TColaboradorRepository.BuscarUsuario(const CriterioIndex: Integer;
  const Valor: Variant; ADataSet: TDataSet);
begin
  // Implementação do método
end;

function TColaboradorRepository.Deletar(const Codigo: Integer): Boolean;
begin
  // Implementação do método
end;

function TColaboradorRepository.Editar(const Codigo, CodSetor: Integer;
  Nome, Matricula: String; DataContrato, PeriodoAquisitivo, PeriodoConsessivo: TDate;
  Ativo: Boolean): Boolean;
begin
  // Implementação do método
end;

function TColaboradorRepository.Inserir(const Codigo, CodSetor: Integer;
  Nome, Matricula: String; DataContrato, DataCadastro, PeriodoAquisitivo,
  PeriodoConsessivo: TDate; Ativo: Boolean): Boolean;
var
  Query: TFDQuery;
begin
  Result := False;
  Query := TFDQuery.Create(nil);
  try
    Query.Connection := GerenciadorConexao.fdConn;
    Query.SQL.Text :=
      'INSERT INTO colaboradores(codigo, nome, matricula, ,codigo_setor, data_contrato, periodo_aquisitivo, periodo_concessivo, data_cadastro, ativo) ' +
      'VALUES (:codigo, :nome, :matricula,:codigo_setor, :data_contrato, :periodo_aquisitivo, :periodo_concessivo, :data_cadastro, :ativo)';
      Query.Params.ParamByName('codigo').AsInteger          := Codigo;
      Query.Params.ParamByName('nome').AsString             := Nome;
      Query.Params.ParamByName('matricula').AsString        := Matricula;
      Query.Params.ParamByName('codigo_setor').AsInteger    := CodSetor;
      Query.Params.ParamByName('data_contrato').AsDate      := DataContrato;
      Query.Params.ParamByName('data_cadastro').AsDate      := Now;
      Query.Params.ParamByName('periodo_aquisitivo').AsDate := PeriodoAquisitivo;
      Query.Params.ParamByName('periodo_concessivo').AsDate := PeriodoConsessivo;
      Query.Params.ParamByName('ativo').AsBoolean           := Ativo;

      Query.ExecSQL;
      Result := True;
  except
    on E: Exception do
      MsgBox('Ocorreu um erro ao inserir o colaborador. Verifique os campos preenchidos e tente novamente.',
        E.Message, False, 2);
  end;
end;

procedure TColaboradorRepository.ListarTodos(ADataSet: TDataSet);
begin
  if ADataSet is TFDQuery then

  begin
    TFDQuery(ADataSet).SQL.Text := 'SELECT * FROM vcolaboradores';
    TFDQuery(ADataSet).Open;
  end;

end;

end.

