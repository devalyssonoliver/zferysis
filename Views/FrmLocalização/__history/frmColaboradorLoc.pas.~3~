unit frmColaboradorLoc;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.WinXCtrls, Vcl.ExtCtrls, System.ImageList, Vcl.ImgList, dmColaboradorLoc;

type
  TCriterioPesquisa = (cpCodigo, cpNome, cpMatricula);
  TFrm_Colaborador_Loc = class(TForm)
    dsColaboradorLoc: TDataSource;
    ilListAtivo: TImageList;
    pnlGrid: TPanel;
    lblTitulo: TLabel;
    pnlTop: TPanel;
    edtPesquisarNome: TEdit;
    edtPesquisarMatricula: TEdit;
    cmbCriteriosdePesquisa: TComboBox;
    edtPesquisarCodigo: TEdit;
    pnl2: TPanel;
    lbl1: TLabel;
    tglswtchTodos: TToggleSwitch;
    pnlBotoes: TPanel;
    btnNovo: TButton;
    btnExibir: TButton;
    btnFechar: TButton;
    btnRelatorio: TButton;
    dbGrid: TDBGrid;
    pnlListTop: TPanel;
    procedure FormCreate(Sender: TObject);
    procedure DesativarBotoesELimparGrade;
    procedure BuscarPorCriterio(const Criterio: TCriterioPesquisa;
    const Valor: string);
    procedure AlterarVisibilidadeCamposPesquisa;
    procedure cmbCriteriosdePesquisaSelect(Sender: TObject);
    procedure TratarCampoPesquisa(Sender: TObject; Criterio: TCriterioPesquisa);
  private
    { Private declarations }
    FDMColaboradorLoc : TColaboradorLocDataModule;
  public
    { Public declarations }
  end;

var
  Frm_Colaborador_Loc: TFrm_Colaborador_Loc;

implementation

uses
  uFuncoes;

{$R *.dfm}

procedure TFrm_Colaborador_Loc.AlterarVisibilidadeCamposPesquisa;
begin
  edtPesquisarCodigo.Visible := cmbCriteriosdePesquisa.ItemIndex = Ord(cpCodigo);
  edtPesquisarNome.Visible   := cmbCriteriosdePesquisa.ItemIndex = Ord(cpNome);
  edtPesquisarMatricula.Visible := cmbCriteriosdePesquisa.ItemIndex = Ord(cpMatricula);
end;

procedure TFrm_Colaborador_Loc.BuscarPorCriterio(
  const Criterio: TCriterioPesquisa; const Valor: string);
begin
 if Trim(Valor) <> '' then
  begin
    try
      FDMColaboradorLoc.Buscar(Ord(Criterio), Valor);
      dbGrid.DataSource := dsColaboradorLoc;
      GerenciarBotoes([btnRelatorio, btnExibir], True);
    except
      on E: Exception do
        MsgBox('Erro!', E.Message, False, 2);
    end;
  end;
end;

procedure TFrm_Colaborador_Loc.cmbCriteriosdePesquisaSelect(Sender: TObject);
begin
    AlterarVisibilidadeCamposPesquisa;
end;

procedure TFrm_Colaborador_Loc.DesativarBotoesELimparGrade;
begin
    dbGrid.DataSource := nil;
    GerenciarBotoes([btnRelatorio, btnExibir], False);
end;

procedure TFrm_Colaborador_Loc.FormCreate(Sender: TObject);
begin
  FDMColaboradorLoc := TColaboradorLocDataModule.Create(nil);
end;

procedure TFrm_Colaborador_Loc.TratarCampoPesquisa(Sender: TObject;
  Criterio: TCriterioPesquisa);
var
  EditField: TEdit;
begin
  EditField := TEdit(Sender);
  if verificarCampoPreenchido(EditField) then
  begin
    case Criterio of
      cpCodigo:
        BuscarPorCriterio(cpCodigo, edtPesquisarCodigo.Text);
      cpNome:
        BuscarPorCriterio(cpNome, edtPesquisarNome.Text);
      cpMatricula:
        BuscarPorCriterio(cpMatricula, edtPesquisarMatricula.Text);
    end;
  end
  else
  begin
    DesativarBotoesELimparGrade;
  end;
end;

end.
